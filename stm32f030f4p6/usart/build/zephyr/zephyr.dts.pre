# 0 "/home/elias/zephyrproject/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/home/elias/zephyrproject/zephyr/boards/others/stm32f030_demo/stm32f030_demo.dts" 1






/dts-v1/;
# 1 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f030X4.dtsi" 1 3 4






# 1 "/home/elias/zephyrproject/zephyr/dts/common/mem.h" 1 3 4
# 8 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f030X4.dtsi" 2 3 4
# 1 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f030.dtsi" 1 3 4






# 1 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 1 3 4
# 9 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 3 4
# 1 "/home/elias/zephyrproject/zephyr/dts/arm/armv6-m.dtsi" 1 3 4


# 1 "/home/elias/zephyrproject/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "/home/elias/zephyrproject/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 4 "/home/elias/zephyrproject/zephyr/dts/arm/armv6-m.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;

  nvic: interrupt-controller@e000e100 {
   #address-cells = <1>;
   compatible = "arm,v6m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  systick: timer@e000e010 {
   compatible = "arm,armv6m-systick";
   reg = <0xe000e010 0x10>;
  };
 };
};
# 10 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f0_clock.h" 1 3 4
# 9 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f0_clock.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32_common_clocks.h" 1 3 4
# 10 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f0_clock.h" 2 3 4
# 11 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 12 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 13 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 14 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/stm32_pwm.h" 1 3 4
# 15 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/dma/stm32_dma.h" 1 3 4
# 16 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32l4_adc.h" 1 3 4
# 9 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32l4_adc.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 1 3 4
# 9 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 1 3 4
# 9 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 1 3 4
# 19 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 1 3 4
# 34 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 1 3 4
# 18 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 1 3 4
# 1083 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_listify.h" 1 3 4
# 1084 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 2 3 4
# 19 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 162 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal_is_eq.h" 1 3 4
# 163 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 193 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_inc.h" 1 3 4
# 194 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_dec.h" 1 3 4
# 197 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_x2.h" 1 3 4
# 200 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 35 "/home/elias/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 2 3 4
# 20 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 2 3 4
# 10 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 2 3 4
# 10 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 2 3 4
# 10 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32l4_adc.h" 2 3 4
# 17 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f0_1_3_reset.h" 1 3 4
# 10 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f0_1_3_reset.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32-common.h" 1 3 4
# 11 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f0_1_3_reset.h" 2 3 4
# 18 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4

# 1 "/home/elias/zephyrproject/zephyr/dts/common/freq.h" 1 3 4
# 20 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4

/ {
 chosen {
  zephyr,flash-controller = &flash;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m0";
   reg = <0>;
  };
 };

 sram0: memory@20000000 {
  compatible = "mmio-sram";
 };

 clocks {
  clk_hse: clk-hse {
   #clock-cells = <0>;
   compatible = "st,stm32-hse-clock";
   status = "disabled";
  };

  clk_hsi: clk-hsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <(((8) * 1000) * 1000)>;
   status = "disabled";
  };

  clk_hsi14: clk-hsi14 {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <(((14) * 1000) * 1000)>;
   status = "disabled";
  };

  clk_lse: clk-lse {
   #clock-cells = <0>;
   compatible = "st,stm32-lse-clock";
   clock-frequency = <32768>;
   driving-capability = <0>;
   status = "disabled";
  };

  clk_lsi: clk-lsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((40) * 1000)>;
   status = "disabled";
  };

  pll: pll {
   #clock-cells = <0>;
   compatible = "st,stm32f0-pll-clock";
   status = "disabled";
  };
 };

 soc {
  flash: flash-controller@40022000 {
   compatible = "st,stm32-flash-controller", "st,stm32f1-flash-controller";
   reg = <0x40022000 0x400>;
   interrupts = <3 0>;
   clocks = <&rcc (0x014) (1 << 4U)>;

   #address-cells = <1>;
   #size-cells = <1>;

   flash0: flash@8000000 {
    compatible = "st,stm32-nv-flash", "soc-nv-flash";
    erase-block-size = <1024>;
    write-block-size = <2>;

    max-erase-time = <40>;
   };
  };

  rcc: rcc@40021000 {
   compatible = "st,stm32f0-rcc";
   #clock-cells = <2>;
   reg = <0x40021000 0x400>;

   rctl: reset-controller {
    compatible = "st,stm32-rcc-rctl";
    #reset-cells = <1>;
   };
  };

  exti: interrupt-controller@40010400 {
   compatible = "st,stm32-exti";
   interrupt-controller;
   #interrupt-cells = <1>;
   #address-cells = <1>;
   reg = <0x40010400 0x400>;
   num-lines = <16>;
   interrupts = <5 0>, <6 0>, <7 0>;
   interrupt-names = "line0-1", "line2-3", "line4-15";
   line-ranges = <0 2>, <2 2>, <4 12>;
  };

  pinctrl: pin-controller@48000000 {
   compatible = "st,stm32-pinctrl";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x48000000 0x1800>;

   gpioa: gpio@48000000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000000 0x400>;
    clocks = <&rcc (0x014) (1 << 17U)>;
   };

   gpiob: gpio@48000400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000400 0x400>;
    clocks = <&rcc (0x014) (1 << 18U)>;
   };

   gpioc: gpio@48000800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000800 0x400>;
    clocks = <&rcc (0x014) (1 << 19U)>;
   };

   gpiod: gpio@48000c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000c00 0x400>;
    clocks = <&rcc (0x014) (1 << 20U)>;
   };

   gpiof: gpio@48001400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48001400 0x400>;
    clocks = <&rcc (0x014) (1 << 22U)>;
   };
  };

  usart1: serial@40013800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40013800 0x400>;
   clocks = <&rcc (0x018) (1 << 14U)>;
   resets = <&rctl (((0x0C) << 5U) | (14U))>;
   interrupts = <27 0>;
   status = "disabled";
  };

  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc (0x01c) (1 << 21U)>,



     <&rcc 0x001 ((((0x30) & 0xFFU) << 0U) | (((4) & 0x1FU) << 8U) | (((1) & 0x7U) << 13U) | (((1) & 0x7U) << 16U))>;
   interrupts = <23 0>;
   interrupt-names = "combined";
   status = "disabled";
  };

  spi1: spi@40013000 {
   compatible = "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc (0x018) (1 << 12U)>;
   interrupts = <25 3>;
   status = "disabled";
  };

  rtc: rtc@40002800 {
   compatible = "st,stm32-rtc";
   reg = <0x40002800 0x400>;
   clocks = <&rcc (0x01c) (1 << 28U)>;
   interrupts = <2 0>;
   prescaler = <32768>;
   alarms-count = <1>;
   alrm-exti-line = <17>;
   status = "disabled";
  };

  iwdg: watchdog@40003000 {
   compatible = "st,stm32-watchdog";
   reg = <0x40003000 0x400>;
   status = "disabled";
  };

  wwdg: watchdog@40002c00 {
   compatible = "st,stm32-window-watchdog";
   reg = <0x40002C00 0x400>;
   clocks = <&rcc (0x01c) (1 << 11U)>;
   interrupts = <0 2>;
   status = "disabled";
  };

  timers1: timers@40012c00 {
   compatible = "st,stm32-timers";
   reg = <0x40012c00 0x400>;
   clocks = <&rcc (0x018) (1 << 11U)>;
   resets = <&rctl (((0x0C) << 5U) | (11U))>;
   interrupts = <13 0>, <14 0>;
   interrupt-names = "brk_up_trg_com", "cc";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers3: timers@40000400 {
   compatible = "st,stm32-timers";
   reg = <0x40000400 0x400>;
   clocks = <&rcc (0x01c) (1 << 1U)>;
   resets = <&rctl (((0x10) << 5U) | (1U))>;
   interrupts = <16 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers14: timers@40002000 {
   compatible = "st,stm32-timers";
   reg = <0x40002000 0x400>;
   clocks = <&rcc (0x01c) (1 << 8U)>;
   resets = <&rctl (((0x10) << 5U) | (8U))>;
   interrupts = <19 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers16: timers@40014400 {
   compatible = "st,stm32-timers";
   reg = <0x40014400 0x400>;
   clocks = <&rcc (0x018) (1 << 17U)>;
   resets = <&rctl (((0x0C) << 5U) | (17U))>;
   interrupts = <21 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers17: timers@40014800 {
   compatible = "st,stm32-timers";
   reg = <0x40014800 0x400>;
   clocks = <&rcc (0x018) (1 << 18U)>;
   resets = <&rctl (((0x0C) << 5U) | (18U))>;
   interrupts = <22 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  adc1: adc@40012400 {
   compatible = "st,stm32-adc";
   reg = <0x40012400 0x400>;
   clocks = <&rcc (0x018) (1 << 9U)>;
   interrupts = <12 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x01) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x02) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((3) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((6) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <2 8 14 29 42 56 72 240>;
   num-sampling-time-common-channels = <1>;
   st,adc-sequencer = "NOT_FULLY_CONFIGURABLE";
   st,adc-oversampler = "OVERSAMPLER_NONE";
  };

  dma1: dma@40020000 {
   compatible = "st,stm32-dma-v2bis";
   #dma-cells = <2>;
   reg = <0x40020000 0x400>;
   clocks = <&rcc (0x014) (1 << 0U)>;
   interrupts = <9 0 10 0 10 0 11 0 11 0>;
   status = "disabled";
  };
 };

 vref: vref {
  compatible = "st,stm32-vref";
  vrefint-cal-addr = <0x1FFFF7BA>;
  vrefint-cal-mv = <3300>;
  io-channels = <&adc1 17>;
  status = "disabled";
 };

 smbus1: smbus1 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c1>;
  status = "disabled";
 };
};

&nvic {
 arm,num-irq-priority-bits = <2>;
};
# 8 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f030.dtsi" 2 3 4

/ {
 soc {
  compatible = "st,stm32f030", "st,stm32f0", "simple-bus";
 };

 die_temp: dietemp {
  compatible = "st,stm32c0-temp-cal";
  ts-cal1-addr = <0x1FFFF7B8>;
  ts-cal1-temp = <30>;
  ts-cal-vrefanalog = <3300>;
  avgslope = "4.3";
  io-channels = <&adc1 16>;
  ntc;
  status = "disabled";
 };
};
# 9 "/home/elias/zephyrproject/zephyr/dts/arm/st/f0/stm32f030X4.dtsi" 2 3 4

/ {
 sram0: memory@20000000 {
  reg = <0x20000000 ((4) * 1024)>;
 };

 soc {
  flash-controller@40022000 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((16) * 1024)>;
   };
  };
 };
};
# 9 "/home/elias/zephyrproject/zephyr/boards/others/stm32f030_demo/stm32f030_demo.dts" 2
# 1 "/home/elias/zephyrproject/modules/hal/stm32/dts/st/f0/stm32f030f4px-pinctrl.dtsi" 1 3 4






# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 1 3 4
# 10 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 3 4
# 1 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl-common.h" 1 3 4
# 11 "/home/elias/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 2 3 4
# 8 "/home/elias/zephyrproject/modules/hal/stm32/dts/st/f0/stm32f030f4px-pinctrl.dtsi" 2 3 4

/ {
 soc {
  pinctrl: pin-controller@48000000 {



   /omit-if-no-ref/ adc_in0_pa0: adc_in0_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in1_pa1: adc_in1_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in2_pa2: adc_in2_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in3_pa3: adc_in3_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in4_pa4: adc_in4_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in5_pa5: adc_in5_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in6_pa6: adc_in6_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in7_pa7: adc_in7_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in9_pb1: adc_in9_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ analog_pa0: analog_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa1: analog_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa2: analog_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa3: analog_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa4: analog_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa5: analog_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa6: analog_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa7: analog_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa9: analog_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa10: analog_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa13: analog_pa13 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa14: analog_pa14 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb1: analog_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf0: analog_pf0 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf1: analog_pf1 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ i2c1_scl_pa9: i2c1_scl_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_sda_pa10: i2c1_sda_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ sys_swdio_pa13: sys_swdio_pa13 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sys_swclk_pa14: sys_swclk_pa14 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ spi1_miso_pa6: spi1_miso_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_mosi_pa7: spi1_mosi_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_nss_pa4: spi1_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ spi1_sck_pa5: spi1_sck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ tim1_bkin_pa6: tim1_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_bkin_pa10: tim17_bkin_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ tim1_ch1n_pa7: tim1_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pa9: tim1_ch2_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pa10: tim1_ch3_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb1: tim1_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pa6: tim3_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pa7: tim3_ch2_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pb1: tim3_ch4_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pa4: tim14_ch1_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pa7: tim14_ch1_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pb1: tim14_ch1_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pa6: tim16_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pa7: tim17_ch1_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart1_cts_pa0: usart1_cts_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_de_pa1: usart1_de_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    drive-push-pull;
   };



   /omit-if-no-ref/ usart1_rts_pa1: usart1_rts_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_rx_pa3: usart1_rx_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pa10: usart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart1_tx_pa2: usart1_tx_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pa9: usart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pa14: usart1_tx_pa14 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

  };
 };
};
# 10 "/home/elias/zephyrproject/zephyr/boards/others/stm32f030_demo/stm32f030_demo.dts" 2

/ {
 model = "STM32F030 DEMO board";
 compatible = "stm32f030-demo";

 chosen {
  zephyr,console = &usart1;
  zephyr,shell-uart = &usart1;
  zephyr,sram = &sram0;
  zephyr,flash = &flash0;
 };

 leds {
  compatible = "gpio-leds";
  led: led {
   gpios = <&gpioa 4 (0 << 0)>;
   label = "User LED";
  };
 };

 aliases {
  led0 = &led;
  watchdog0 = &iwdg;
 };
};

&clk_hse {
 clock-frequency = <(((8) * 1000) * 1000)>;
 status = "okay";
};

&pll {
 prediv = <1>;
 mul = <6>;
 clocks = <&clk_hse>;
 status = "okay";
};

&rcc {
 clocks = <&pll>;
 clock-frequency = <(((48) * 1000) * 1000)>;
 ahb-prescaler = <1>;
 apb1-prescaler = <1>;
};


&gpioc {status = "disabled";};
&gpiod {status = "disabled";};
&gpiof {status = "disabled";};

&usart1 {
 pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
 pinctrl-names = "default";
 current-speed = <115200>;
 status = "okay";
};

&iwdg {
 status = "okay";
};
# 0 "<command-line>" 2
# 1 "/home/elias/zephyrproject/applications/stm32f030f4p6/usart/boards/stm32f030_demo.overlay" 1
/{
    leds {
        compatible = "gpio-leds";
        led_0:led_0 {
            gpios = <&gpioa 4 (0 << 0)>;
        };
    };
};
# 0 "<command-line>" 2
# 1 "/home/elias/zephyrproject/zephyr/misc/empty_file.c"
